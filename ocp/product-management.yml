apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-07-22T18:08:38Z
    creationTimestamp: null
    generation: 2
    labels:
      build: partner-frontend
    name: partner-frontend
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/product-management/partner-frontend:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-07-22T18:08:38Z
    creationTimestamp: null
    generation: 2
    labels:
      build: partner-frontend-build
    name: partner-frontend-build
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/product-management/partner-frontend-build:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: partner-frontend
    name: partner-frontend
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: partner-frontend:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      images:
      - from:
          kind: ImageStreamTag
          name: partner-frontend-build:latest
          namespace: rht-product-management
        paths:
        - destinationDir: .
          sourcePath: /opt/app-root/src/dist/index.html
        - destinationDir: .
          sourcePath: /opt/app-root/src/dist/build.js
        - destinationDir: .
          sourcePath: /opt/app-root/src/dist/build.js.map
        - destinationDir: .
          sourcePath: /opt/app-root/src/dist/main.css
        - destinationDir: .
          sourcePath: /opt/app-root/src/dist/main.css.map
        - destinationDir: .
          sourcePath: /opt/app-root/src/dist/nginx.conf
      type: Image
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nginx:1.12
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: mxdaSvELfvVnf_VGG02C
      type: GitHub
    - generic:
        secret: cK7jwdhIPRCGuNDM6ZBx
      type: Generic
    - imageChange:
        from:
          kind: ImageStreamTag
          name: partner-frontend-build:latest
          namespace: rht-product-management
      type: ImageChange
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: partner-frontend-build
    name: partner-frontend-build
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: partner-frontend-build:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/mgohashi/partner-frontend.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:8
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: h5wbDXmOzSOfi8perAsv
      type: GitHub
    - generic:
        secret: TY6SVBnGsibXcHF7e3vp
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: partner-frontend
    name: partner-frontend
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: partner-frontend
      deploymentconfig: partner-frontend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: partner-frontend
          deploymentconfig: partner-frontend
      spec:
        containers:
        - image: docker-registry.default.svc:5000/product-management/partner-frontend@sha256:73c624dc161550a5a5e58bc9b9d8e141982856abf42bb14cc1cf40c3304a60fd
          imagePullPolicy: Always
          name: partner-frontend
          ports:
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - partner-frontend
        from:
          kind: ImageStreamTag
          name: partner-frontend:latest
          namespace: rht-product-management
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: partner-frontend
    name: partner-frontend
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: partner-frontend
      deploymentconfig: partner-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
